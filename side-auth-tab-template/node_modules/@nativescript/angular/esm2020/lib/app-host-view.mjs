import { ContentView, ProxyViewContainer, GridLayout, Application } from '@nativescript/core';
export class AppHostView extends ContentView {
    constructor(backgroundColor) {
        super();
        this.timeout = -1;
        this.backgroundColor = backgroundColor;
    }
    get ngAppRoot() {
        return this._ngAppRoot;
    }
    set ngAppRoot(value) {
        this._ngAppRoot = value;
    }
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    //@ts-ignore
    get content() {
        return this._content;
    }
    set content(value) {
        if (this._content) {
            this._content.parentNode = undefined;
        }
        this._content = value;
        if (value) {
            this._content.parentNode = this;
        }
        this.ngAppRoot = value;
        if (this._content instanceof ProxyViewContainer) {
            const grid = new GridLayout();
            grid.backgroundColor = this.backgroundColor;
            grid.addChild(this._content);
            this.ngAppRoot = grid;
        }
        if (this.ngAppRoot) {
            // maybe use this approach
            // this.scheduleRootChange();
        }
    }
    scheduleRootChange() {
        if (this.timeout === -1) {
            this.timeout = setTimeout(() => {
                //console.log(this.ngAppRoot);
                Application.resetRootView({
                    create: () => this.content,
                });
                this.timeout = -1;
            }, 0);
        }
    }
}
export class AppHostAsyncView extends GridLayout {
    constructor(backgroundColor) {
        super();
        this.backgroundColor = backgroundColor;
    }
    get ngAppRoot() {
        return this;
    }
    set ngAppRoot(value) {
        // ignored
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLWhvc3Qtdmlldy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2FuZ3VsYXIvc3JjL2xpYi9hcHAtaG9zdC12aWV3LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQVEsa0JBQWtCLEVBQUUsVUFBVSxFQUFTLFdBQVcsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTNHLE1BQU0sT0FBTyxXQUFZLFNBQVEsV0FBVztJQUsxQyxZQUFZLGVBQXNCO1FBQ2hDLEtBQUssRUFBRSxDQUFDO1FBSEYsWUFBTyxHQUFRLENBQUMsQ0FBQyxDQUFDO1FBSXhCLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO0lBQ3pDLENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVELElBQUksU0FBUyxDQUFDLEtBQVc7UUFDdkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDMUIsQ0FBQztJQUNELDZEQUE2RDtJQUM3RCxZQUFZO0lBQ1osSUFBSSxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxJQUFJLE9BQU8sQ0FBQyxLQUFXO1FBQ3JCLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNqQixJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUM7U0FDdEM7UUFFRCxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUV0QixJQUFJLEtBQUssRUFBRTtZQUNULElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztTQUNqQztRQUVELElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBRXZCLElBQUksSUFBSSxDQUFDLFFBQVEsWUFBWSxrQkFBa0IsRUFBRTtZQUMvQyxNQUFNLElBQUksR0FBRyxJQUFJLFVBQVUsRUFBRSxDQUFDO1lBQzlCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQztZQUM1QyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUM3QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztTQUN2QjtRQUNELElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNsQiwwQkFBMEI7WUFDMUIsNkJBQTZCO1NBQzlCO0lBQ0gsQ0FBQztJQUVELGtCQUFrQjtRQUNoQixJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUM3Qiw4QkFBOEI7Z0JBQzlCLFdBQVcsQ0FBQyxhQUFhLENBQUM7b0JBQ3hCLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTztpQkFDM0IsQ0FBQyxDQUFDO2dCQUNILElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDcEIsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ1A7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsVUFBVTtJQUM5QyxZQUFZLGVBQXNCO1FBQ2hDLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLGVBQWUsR0FBRyxlQUFlLENBQUM7SUFDekMsQ0FBQztJQUVELElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELElBQUksU0FBUyxDQUFDLEtBQVc7UUFDdkIsVUFBVTtJQUNaLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRlbnRWaWV3LCBWaWV3LCBQcm94eVZpZXdDb250YWluZXIsIEdyaWRMYXlvdXQsIENvbG9yLCBBcHBsaWNhdGlvbiB9IGZyb20gJ0BuYXRpdmVzY3JpcHQvY29yZSc7XG5cbmV4cG9ydCBjbGFzcyBBcHBIb3N0VmlldyBleHRlbmRzIENvbnRlbnRWaWV3IHtcbiAgcHJpdmF0ZSBfbmdBcHBSb290OiBWaWV3O1xuICBwcml2YXRlIF9jb250ZW50OiBWaWV3O1xuICBwcml2YXRlIHRpbWVvdXQ6IGFueSA9IC0xO1xuXG4gIGNvbnN0cnVjdG9yKGJhY2tncm91bmRDb2xvcjogQ29sb3IpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuYmFja2dyb3VuZENvbG9yID0gYmFja2dyb3VuZENvbG9yO1xuICB9XG5cbiAgZ2V0IG5nQXBwUm9vdCgpOiBWaWV3IHtcbiAgICByZXR1cm4gdGhpcy5fbmdBcHBSb290O1xuICB9XG5cbiAgc2V0IG5nQXBwUm9vdCh2YWx1ZTogVmlldykge1xuICAgIHRoaXMuX25nQXBwUm9vdCA9IHZhbHVlO1xuICB9XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbiAgLy9AdHMtaWdub3JlXG4gIGdldCBjb250ZW50KCk6IFZpZXcge1xuICAgIHJldHVybiB0aGlzLl9jb250ZW50O1xuICB9XG5cbiAgc2V0IGNvbnRlbnQodmFsdWU6IFZpZXcpIHtcbiAgICBpZiAodGhpcy5fY29udGVudCkge1xuICAgICAgdGhpcy5fY29udGVudC5wYXJlbnROb2RlID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIHRoaXMuX2NvbnRlbnQgPSB2YWx1ZTtcblxuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy5fY29udGVudC5wYXJlbnROb2RlID0gdGhpcztcbiAgICB9XG5cbiAgICB0aGlzLm5nQXBwUm9vdCA9IHZhbHVlO1xuXG4gICAgaWYgKHRoaXMuX2NvbnRlbnQgaW5zdGFuY2VvZiBQcm94eVZpZXdDb250YWluZXIpIHtcbiAgICAgIGNvbnN0IGdyaWQgPSBuZXcgR3JpZExheW91dCgpO1xuICAgICAgZ3JpZC5iYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLmJhY2tncm91bmRDb2xvcjtcbiAgICAgIGdyaWQuYWRkQ2hpbGQodGhpcy5fY29udGVudCk7XG4gICAgICB0aGlzLm5nQXBwUm9vdCA9IGdyaWQ7XG4gICAgfVxuICAgIGlmICh0aGlzLm5nQXBwUm9vdCkge1xuICAgICAgLy8gbWF5YmUgdXNlIHRoaXMgYXBwcm9hY2hcbiAgICAgIC8vIHRoaXMuc2NoZWR1bGVSb290Q2hhbmdlKCk7XG4gICAgfVxuICB9XG5cbiAgc2NoZWR1bGVSb290Q2hhbmdlKCkge1xuICAgIGlmICh0aGlzLnRpbWVvdXQgPT09IC0xKSB7XG4gICAgICB0aGlzLnRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLm5nQXBwUm9vdCk7XG4gICAgICAgIEFwcGxpY2F0aW9uLnJlc2V0Um9vdFZpZXcoe1xuICAgICAgICAgIGNyZWF0ZTogKCkgPT4gdGhpcy5jb250ZW50LFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy50aW1lb3V0ID0gLTE7XG4gICAgICB9LCAwKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIEFwcEhvc3RBc3luY1ZpZXcgZXh0ZW5kcyBHcmlkTGF5b3V0IHtcbiAgY29uc3RydWN0b3IoYmFja2dyb3VuZENvbG9yOiBDb2xvcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5iYWNrZ3JvdW5kQ29sb3IgPSBiYWNrZ3JvdW5kQ29sb3I7XG4gIH1cblxuICBnZXQgbmdBcHBSb290KCk6IFZpZXcge1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgc2V0IG5nQXBwUm9vdCh2YWx1ZTogVmlldykge1xuICAgIC8vIGlnbm9yZWRcbiAgfVxufVxuIl19