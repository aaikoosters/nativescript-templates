import { AbsoluteLayout, ActivityIndicator, Button, ContentView, DatePicker, DockLayout, FlexboxLayout, FormattedString, Frame, GridLayout, HtmlView, Image, Label, ListPicker, ListView, Page, Placeholder, Progress, ProxyViewContainer, Repeater, RootLayout, ScrollView, SearchBar, SegmentedBar, SegmentedBarItem, Slider, Span, StackLayout, Switch, TabView, TextField, TextView, TimePicker, WebView, WrapLayout } from '@nativescript/core';
import { formattedStringMeta, frameMeta, textBaseMeta } from './metas';
import { registerElement } from './registry';
// Register default NativeScript components
// Note: ActionBar related components are registerd together with action-bar directives.
export function registerNativeScriptViewComponents() {
    if (!global.__ngRegisteredViews) {
        global.__ngRegisteredViews = true;
        registerElement('AbsoluteLayout', () => AbsoluteLayout);
        registerElement('ActivityIndicator', () => ActivityIndicator);
        registerElement('Button', () => Button, textBaseMeta);
        registerElement('ContentView', () => ContentView);
        registerElement('DatePicker', () => DatePicker);
        registerElement('DockLayout', () => DockLayout);
        registerElement('Frame', () => Frame, frameMeta);
        registerElement('GridLayout', () => GridLayout);
        registerElement('HtmlView', () => HtmlView);
        registerElement('Image', () => Image);
        // Parse5 changes <Image> tags to <img>. WTF!
        registerElement('img', () => Image);
        registerElement('Label', () => Label, textBaseMeta);
        registerElement('ListPicker', () => ListPicker);
        registerElement('ListView', () => ListView);
        registerElement('Page', () => Page);
        registerElement('Placeholder', () => Placeholder);
        registerElement('Progress', () => Progress);
        registerElement('ProxyViewContainer', () => ProxyViewContainer);
        registerElement('Repeater', () => Repeater);
        registerElement('RootLayout', () => RootLayout);
        registerElement('ScrollView', () => ScrollView);
        registerElement('SearchBar', () => SearchBar);
        registerElement('SegmentedBar', () => SegmentedBar);
        registerElement('SegmentedBarItem', () => SegmentedBarItem);
        registerElement('Slider', () => Slider);
        registerElement('StackLayout', () => StackLayout);
        registerElement('FlexboxLayout', () => FlexboxLayout);
        registerElement('Switch', () => Switch);
        registerElement('TabView', () => TabView);
        registerElement('TextField', () => TextField, textBaseMeta);
        registerElement('TextView', () => TextView, textBaseMeta);
        registerElement('TimePicker', () => TimePicker);
        registerElement('WebView', () => WebView);
        registerElement('WrapLayout', () => WrapLayout);
        registerElement('FormattedString', () => FormattedString, formattedStringMeta);
        registerElement('Span', () => Span);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLXZpZXdzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhci9zcmMvbGliL2VsZW1lbnQtcmVnaXN0cnkvY29tbW9uLXZpZXdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLGFBQWEsRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLGtCQUFrQixFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcmIsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDdkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUU3QywyQ0FBMkM7QUFDM0Msd0ZBQXdGO0FBQ3hGLE1BQU0sVUFBVSxrQ0FBa0M7SUFDaEQsSUFBSSxDQUFPLE1BQU8sQ0FBQyxtQkFBbUIsRUFBRTtRQUNoQyxNQUFPLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDO1FBQ3pDLGVBQWUsQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLEVBQUUsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN4RCxlQUFlLENBQUMsbUJBQW1CLEVBQUUsR0FBRyxFQUFFLENBQUMsaUJBQWlCLENBQUMsQ0FB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QUFDLENBQUM7UUFDMUMsZUFBZSxDQUFDLFlBQVksRUFBRSxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNoRCxlQUFlLENBQUMsaUJBQWlCLEVBQUUsR0FBRyxFQUFFLENBQUMsZUFBZSxFQUFFLG1CQUFtQixDQUFDLENBQUM7UUFDL0UsZUFBZSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNyQztBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBYnNvbHV0ZUxheW91dCwgQWN0aXZpdHlJbmRpY2F0b3IsIEJ1dHRvbiwgQ29udGVudFZpZXcsIERhdGVQaWNrZXIsIERvY2tMYXlvdXQsIEZsZXhib3hMYXlvdXQsIEZvcm1hdHRlZFN0cmluZywgRnJhbWUsIEdyaWRMYXlvdXQsIEh0bWxWaWV3LCBJbWFnZSwgTGFiZWwsIExpc3RQaWNrZXIsIExpc3RWaWV3LCBQYWdlLCBQbGFjZWhvbGRlciwgUHJvZ3Jlc3MsIFByb3h5Vmlld0NvbnRhaW5lciwgUmVwZWF0ZXIsIFJvb3RMYXlvdXQsIFNjcm9sbFZpZXcsIFNlYXJjaEJhciwgU2VnbWVudGVkQmFyLCBTZWdtZW50ZWRCYXJJdGVtLCBTbGlkZXIsIFNwYW4sIFN0YWNrTGF5b3V0LCBTd2l0Y2gsIFRhYlZpZXcsIFRleHRGaWVsZCwgVGV4dFZpZXcsIFRpbWVQaWNrZXIsIFdlYlZpZXcsIFdyYXBMYXlvdXQgfSBmcm9tICdAbmF0aXZlc2NyaXB0L2NvcmUnO1xuaW1wb3J0IHsgZm9ybWF0dGVkU3RyaW5nTWV0YSwgZnJhbWVNZXRhLCB0ZXh0QmFzZU1ldGEgfSBmcm9tICcuL21ldGFzJztcbmltcG9ydCB7IHJlZ2lzdGVyRWxlbWVudCB9IGZyb20gJy4vcmVnaXN0cnknO1xuXG4vLyBSZWdpc3RlciBkZWZhdWx0IE5hdGl2ZVNjcmlwdCBjb21wb25lbnRzXG4vLyBOb3RlOiBBY3Rpb25CYXIgcmVsYXRlZCBjb21wb25lbnRzIGFyZSByZWdpc3RlcmQgdG9nZXRoZXIgd2l0aCBhY3Rpb24tYmFyIGRpcmVjdGl2ZXMuXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJOYXRpdmVTY3JpcHRWaWV3Q29tcG9uZW50cygpIHtcbiAgaWYgKCEoPGFueT5nbG9iYWwpLl9fbmdSZWdpc3RlcmVkVmlld3MpIHtcbiAgICAoPGFueT5nbG9iYWwpLl9fbmdSZWdpc3RlcmVkVmlld3MgPSB0cnVlO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnQWJzb2x1dGVMYXlvdXQnLCAoKSA9PiBBYnNvbHV0ZUxheW91dCk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdBY3Rpdml0eUluZGljYXRvcicsICgpID0+IEFjdGl2aXR5SW5kaWNhdG9yKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ0J1dHRvbicsICgpID0+IEJ1dHRvbiwgdGV4dEJhc2VNZXRhKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ0NvbnRlbnRWaWV3JywgKCkgPT4gQ29udGVudFZpZXcpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnRGF0ZVBpY2tlcicsICgpID0+IERhdGVQaWNrZXIpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnRG9ja0xheW91dCcsICgpID0+IERvY2tMYXlvdXQpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnRnJhbWUnLCAoKSA9PiBGcmFtZSwgZnJhbWVNZXRhKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ0dyaWRMYXlvdXQnLCAoKSA9PiBHcmlkTGF5b3V0KTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ0h0bWxWaWV3JywgKCkgPT4gSHRtbFZpZXcpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnSW1hZ2UnLCAoKSA9PiBJbWFnZSk7XG4gICAgLy8gUGFyc2U1IGNoYW5nZXMgPEltYWdlPiB0YWdzIHRvIDxpbWc+LiBXVEYhXG4gICAgcmVnaXN0ZXJFbGVtZW50KCdpbWcnLCAoKSA9PiBJbWFnZSk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdMYWJlbCcsICgpID0+IExhYmVsLCB0ZXh0QmFzZU1ldGEpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnTGlzdFBpY2tlcicsICgpID0+IExpc3RQaWNrZXIpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnTGlzdFZpZXcnLCAoKSA9PiBMaXN0Vmlldyk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdQYWdlJywgKCkgPT4gUGFnZSk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdQbGFjZWhvbGRlcicsICgpID0+IFBsYWNlaG9sZGVyKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1Byb2dyZXNzJywgKCkgPT4gUHJvZ3Jlc3MpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnUHJveHlWaWV3Q29udGFpbmVyJywgKCkgPT4gUHJveHlWaWV3Q29udGFpbmVyKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1JlcGVhdGVyJywgKCkgPT4gUmVwZWF0ZXIpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnUm9vdExheW91dCcsICgpID0+IFJvb3RMYXlvdXQpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnU2Nyb2xsVmlldycsICgpID0+IFNjcm9sbFZpZXcpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnU2VhcmNoQmFyJywgKCkgPT4gU2VhcmNoQmFyKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1NlZ21lbnRlZEJhcicsICgpID0+IFNlZ21lbnRlZEJhcik7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdTZWdtZW50ZWRCYXJJdGVtJywgKCkgPT4gU2VnbWVudGVkQmFySXRlbSk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdTbGlkZXInLCAoKSA9PiBTbGlkZXIpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnU3RhY2tMYXlvdXQnLCAoKSA9PiBTdGFja0xheW91dCk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdGbGV4Ym94TGF5b3V0JywgKCkgPT4gRmxleGJveExheW91dCk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdTd2l0Y2gnLCAoKSA9PiBTd2l0Y2gpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnVGFiVmlldycsICgpID0+IFRhYlZpZXcpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnVGV4dEZpZWxkJywgKCkgPT4gVGV4dEZpZWxkLCB0ZXh0QmFzZU1ldGEpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnVGV4dFZpZXcnLCAoKSA9PiBUZXh0VmlldywgdGV4dEJhc2VNZXRhKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1RpbWVQaWNrZXInLCAoKSA9PiBUaW1lUGlja2VyKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1dlYlZpZXcnLCAoKSA9PiBXZWJWaWV3KTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1dyYXBMYXlvdXQnLCAoKSA9PiBXcmFwTGF5b3V0KTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ0Zvcm1hdHRlZFN0cmluZycsICgpID0+IEZvcm1hdHRlZFN0cmluZywgZm9ybWF0dGVkU3RyaW5nTWV0YSk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdTcGFuJywgKCkgPT4gU3Bhbik7XG4gIH1cbn1cbiJdfQ==