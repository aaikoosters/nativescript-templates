export * from './views';
export * from './tokens';
export * from './property-filter';
export * from './view-refs';
export * from './app-host-view';
export { COMMON_PROVIDERS, NativeScriptDocument, NativeScriptSanitizer, defaultPageFactoryProvider, platformNativeScriptDynamic, platformNativeScript } from './platform-nativescript';
export * from './cdk/detached-loader';
export { NATIVESCRIPT_MODULE_PROVIDERS, NATIVESCRIPT_MODULE_STATIC_PROVIDERS, NativeScriptModule, errorHandler, generateFallbackRootView, generateRandomId } from './nativescript';
export { ActionBarComponent, ActionBarScope, ActionItemDirective, NavigationButtonDirective } from './cdk/action-bar';
// export * from './cdk/dialog';
export * from './cdk/frame-page';
export * from './rootcomposite.module';
export * from './cdk/list-view';
export * from './cdk/portal';
export * from './cdk/dialog';
export * from './cdk/tab-view';
export * from './cdk/platform-filters/android-filter.component';
export * from './cdk/platform-filters/ios-filter.component';
export * from './file-system';
export * from './nativescript-common.module';
export * from './loading.service';
export * from './detached-loader-utils';
// export * from './router/router.module';
export { disableRootViewHanding, onAfterLivesync, onBeforeLivesync, postAngularBootstrap$, preAngularDisposal$, runNativeScriptAngularApp, bootstrapApplication } from './application';
export * from './element-registry';
export * from './nativescript-xhr-factory';
export { EmulatedRenderer, NativeScriptRendererFactory, COMPONENT_VARIABLE as ɵCOMPONENT_VARIABLE, CONTENT_ATTR as ɵCONTENT_ATTR, HOST_ATTR as ɵHOST_ATTR } from './nativescript-renderer';
export * from './utils';
export * from './forms';
export * from './animations';
export * from './http';
export * from './legacy';
export { NativeScriptDebug as ɵNativeScriptAngularDebug } from './trace';
export * from './nativescript-ng-zone';
export * from './private-exports';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2FuZ3VsYXIvc3JjL2xpYi9wdWJsaWNfYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsU0FBUyxDQUFDO0FBQ3hCLGNBQWMsVUFBVSxDQUFDO0FBQ3pCLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxhQUFhLENBQUM7QUFDNUIsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxPQUFPLEVBQWMsZ0JBQWdCLEVBQWMsb0JBQW9CLEVBQUUscUJBQXFCLEVBQUUsMEJBQTBCLEVBQUUsMkJBQTJCLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMvTSxjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxvQ0FBb0MsRUFBRSxrQkFBa0IsRUFBRSxZQUFZLEVBQUUsd0JBQXdCLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNuTCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsY0FBYyxFQUFFLG1CQUFtQixFQUFFLHlCQUF5QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdEgsZ0NBQWdDO0FBQ2hDLGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYyx3QkFBd0IsQ0FBQztBQUN2QyxjQUFjLGlCQUFpQixDQUFDO0FBQ2hDLGNBQWMsY0FBYyxDQUFDO0FBQzdCLGNBQWMsY0FBYyxDQUFDO0FBQzdCLGNBQWMsZ0JBQWdCLENBQUM7QUFDL0IsY0FBYyxpREFBaUQsQ0FBQztBQUNoRSxjQUFjLDZDQUE2QyxDQUFDO0FBQzVELGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsOEJBQThCLENBQUM7QUFDN0MsY0FBYyxtQkFBbUIsQ0FBQztBQUNsQyxjQUFjLHlCQUF5QixDQUFDO0FBQ3hDLDBDQUEwQztBQUMxQyxPQUFPLEVBQStELHNCQUFzQixFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxxQkFBcUIsRUFBRSxtQkFBbUIsRUFBRSx5QkFBeUIsRUFBcUIsb0JBQW9CLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdlEsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSwyQkFBMkIsRUFBRSxrQkFBa0IsSUFBSSxtQkFBbUIsRUFBRSxZQUFZLElBQUksYUFBYSxFQUFFLFNBQVMsSUFBSSxVQUFVLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMzTCxjQUFjLFNBQVMsQ0FBQztBQUN4QixjQUFjLFNBQVMsQ0FBQztBQUN4QixjQUFjLGNBQWMsQ0FBQztBQUM3QixjQUFjLFFBQVEsQ0FBQztBQUN2QixjQUFjLFVBQVUsQ0FBQztBQUN6QixPQUFPLEVBQUUsaUJBQWlCLElBQUkseUJBQXlCLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDekUsY0FBYyx3QkFBd0IsQ0FBQztBQUN2QyxjQUFjLG1CQUFtQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi92aWV3cyc7XG5leHBvcnQgKiBmcm9tICcuL3Rva2Vucyc7XG5leHBvcnQgKiBmcm9tICcuL3Byb3BlcnR5LWZpbHRlcic7XG5leHBvcnQgKiBmcm9tICcuL3ZpZXctcmVmcyc7XG5leHBvcnQgKiBmcm9tICcuL2FwcC1ob3N0LXZpZXcnO1xuZXhwb3J0IHsgQXBwT3B0aW9ucywgQ09NTU9OX1BST1ZJREVSUywgSG1yT3B0aW9ucywgTmF0aXZlU2NyaXB0RG9jdW1lbnQsIE5hdGl2ZVNjcmlwdFNhbml0aXplciwgZGVmYXVsdFBhZ2VGYWN0b3J5UHJvdmlkZXIsIHBsYXRmb3JtTmF0aXZlU2NyaXB0RHluYW1pYywgcGxhdGZvcm1OYXRpdmVTY3JpcHQgfSBmcm9tICcuL3BsYXRmb3JtLW5hdGl2ZXNjcmlwdCc7XG5leHBvcnQgKiBmcm9tICcuL2Nkay9kZXRhY2hlZC1sb2FkZXInO1xuZXhwb3J0IHsgTkFUSVZFU0NSSVBUX01PRFVMRV9QUk9WSURFUlMsIE5BVElWRVNDUklQVF9NT0RVTEVfU1RBVElDX1BST1ZJREVSUywgTmF0aXZlU2NyaXB0TW9kdWxlLCBlcnJvckhhbmRsZXIsIGdlbmVyYXRlRmFsbGJhY2tSb290VmlldywgZ2VuZXJhdGVSYW5kb21JZCB9IGZyb20gJy4vbmF0aXZlc2NyaXB0JztcbmV4cG9ydCB7IEFjdGlvbkJhckNvbXBvbmVudCwgQWN0aW9uQmFyU2NvcGUsIEFjdGlvbkl0ZW1EaXJlY3RpdmUsIE5hdmlnYXRpb25CdXR0b25EaXJlY3RpdmUgfSBmcm9tICcuL2Nkay9hY3Rpb24tYmFyJztcbi8vIGV4cG9ydCAqIGZyb20gJy4vY2RrL2RpYWxvZyc7XG5leHBvcnQgKiBmcm9tICcuL2Nkay9mcmFtZS1wYWdlJztcbmV4cG9ydCAqIGZyb20gJy4vcm9vdGNvbXBvc2l0ZS5tb2R1bGUnO1xuZXhwb3J0ICogZnJvbSAnLi9jZGsvbGlzdC12aWV3JztcbmV4cG9ydCAqIGZyb20gJy4vY2RrL3BvcnRhbCc7XG5leHBvcnQgKiBmcm9tICcuL2Nkay9kaWFsb2cnO1xuZXhwb3J0ICogZnJvbSAnLi9jZGsvdGFiLXZpZXcnO1xuZXhwb3J0ICogZnJvbSAnLi9jZGsvcGxhdGZvcm0tZmlsdGVycy9hbmRyb2lkLWZpbHRlci5jb21wb25lbnQnO1xuZXhwb3J0ICogZnJvbSAnLi9jZGsvcGxhdGZvcm0tZmlsdGVycy9pb3MtZmlsdGVyLmNvbXBvbmVudCc7XG5leHBvcnQgKiBmcm9tICcuL2ZpbGUtc3lzdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbmF0aXZlc2NyaXB0LWNvbW1vbi5tb2R1bGUnO1xuZXhwb3J0ICogZnJvbSAnLi9sb2FkaW5nLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9kZXRhY2hlZC1sb2FkZXItdXRpbHMnO1xuLy8gZXhwb3J0ICogZnJvbSAnLi9yb3V0ZXIvcm91dGVyLm1vZHVsZSc7XG5leHBvcnQgeyBBcHBMYXVuY2hWaWV3LCBBcHBSdW5PcHRpb25zLCBOZ01vZHVsZUV2ZW50LCBOZ01vZHVsZVJlYXNvbiwgZGlzYWJsZVJvb3RWaWV3SGFuZGluZywgb25BZnRlckxpdmVzeW5jLCBvbkJlZm9yZUxpdmVzeW5jLCBwb3N0QW5ndWxhckJvb3RzdHJhcCQsIHByZUFuZ3VsYXJEaXNwb3NhbCQsIHJ1bk5hdGl2ZVNjcmlwdEFuZ3VsYXJBcHAsIEFwcGxpY2F0aW9uQ29uZmlnLCBib290c3RyYXBBcHBsaWNhdGlvbiB9IGZyb20gJy4vYXBwbGljYXRpb24nO1xuZXhwb3J0ICogZnJvbSAnLi9lbGVtZW50LXJlZ2lzdHJ5JztcbmV4cG9ydCAqIGZyb20gJy4vbmF0aXZlc2NyaXB0LXhoci1mYWN0b3J5JztcbmV4cG9ydCB7IEVtdWxhdGVkUmVuZGVyZXIsIE5hdGl2ZVNjcmlwdFJlbmRlcmVyRmFjdG9yeSwgQ09NUE9ORU5UX1ZBUklBQkxFIGFzIMm1Q09NUE9ORU5UX1ZBUklBQkxFLCBDT05URU5UX0FUVFIgYXMgybVDT05URU5UX0FUVFIsIEhPU1RfQVRUUiBhcyDJtUhPU1RfQVRUUiB9IGZyb20gJy4vbmF0aXZlc2NyaXB0LXJlbmRlcmVyJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMnO1xuZXhwb3J0ICogZnJvbSAnLi9mb3Jtcyc7XG5leHBvcnQgKiBmcm9tICcuL2FuaW1hdGlvbnMnO1xuZXhwb3J0ICogZnJvbSAnLi9odHRwJztcbmV4cG9ydCAqIGZyb20gJy4vbGVnYWN5JztcbmV4cG9ydCB7IE5hdGl2ZVNjcmlwdERlYnVnIGFzIMm1TmF0aXZlU2NyaXB0QW5ndWxhckRlYnVnIH0gZnJvbSAnLi90cmFjZSc7XG5leHBvcnQgKiBmcm9tICcuL25hdGl2ZXNjcmlwdC1uZy16b25lJztcbmV4cG9ydCAqIGZyb20gJy4vcHJpdmF0ZS1leHBvcnRzJztcbiJdfQ==